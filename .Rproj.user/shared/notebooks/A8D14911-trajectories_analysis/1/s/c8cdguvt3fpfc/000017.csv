"0","# --------------------------------------------------------------------"
"0","# Aggregate Mean Trajectories per Word Position"
"0","# --------------------------------------------------------------------"
"0","mean_trajectory <- results_df %>%"
"0","  group_by(deliberation_function, start_word) %>%"
"0","  summarise(similarity = mean(similarity, na.rm = TRUE)) %>%"
"0","  rename(position = start_word)"
"2","`summarise()` has grouped output by 'deliberation_function'. You can override using the `.groups` argument."
"0","# --------------------------------------------------------------------"
"0","# Compute Transcription Length per Response"
"0","# --------------------------------------------------------------------"
"0","results_df <- results_df %>%"
"0","  group_by(subject_id, question) %>%"
"0","  mutate(transcription_length = max(end_word)) %>%"
"0","  ungroup()"
"0",""
"0","# --------------------------------------------------------------------"
"0","# Aggregate Mean Trajectories per Normalized Position"
"0","# --------------------------------------------------------------------"
"0","results_df <- results_df %>%"
"0","  mutate(normalized_position = start_word / transcription_length)"
"0",""
"0","mean_trajectory_norm <- results_df %>%"
"0","  group_by(deliberation_function, normalized_position) %>%"
"0","  summarise(similarity = mean(similarity, na.rm = TRUE)) %>%"
"0","  rename(position = normalized_position)"
"2","`summarise()` has grouped output by 'deliberation_function'. You can override using the `.groups` argument."
"0","# --------------------------------------------------------------------"
"0","# Smoothing Function"
"0","# --------------------------------------------------------------------"
"0","smooth_trajectory <- function(df, window = 5) {"
"0","  df %>%"
"0","    group_by(deliberation_function) %>%"
"0","    arrange(position) %>%"
"0","    mutate(similarity = rollmean(similarity, k = window, fill = NA, align = ""center"")) %>%"
"0","    drop_na()"
"0","}"
"0",""
